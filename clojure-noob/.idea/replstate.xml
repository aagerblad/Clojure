<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1460432271882">{:repl-history {:ide [], :local [&quot;(+ 1 2 3 4 5\n   )&quot; &quot;(-main)&quot; &quot;(+ 1 23 4 )&quot; &quot;(+ 1 2 3 4 5)&quot; &quot;(better-symmetrize-body-parts asym-hobbit-body-parts)&quot; &quot;(expand-body-parts (better-symmetrize-body-parts asym-hobbit-body-parts))&quot; &quot;(let [sym-parts (better-symmetrize-body-parts asym-hobbit-body-parts)\n      ]\n  (map :size sym-parts))&quot; &quot;(let [sym-parts (better-symmetrize-body-parts asym-hobbit-body-parts)\n      ]\n  (reduce + (map :size sym-parts)))&quot; &quot;(let [sym-parts (better-symmetrize-body-parts asym-hobbit-body-parts)\n      ]\n  (rand (reduce + (map :size sym-parts))))&quot; &quot;(let [sym-parts (better-symmetrize-body-parts asym-hobbit-body-parts)\n      ]\n  (rand \n    (reduce + (map :size sym-parts))))&quot; &quot;(hit (better-symmetrize-body-parts asym-hobbit-body-parts))&quot; &quot;(hit (better-symmetrize-body-parts asym-hobbit-body-parts\n                                   ))&quot; &quot;(str \&quot;asdf\&quot; \&quot;asdf\&quot;)&quot; &quot;(str \&quot;asdf'\&quot; \&quot;qwe \&quot;\&quot;wqer\&quot;)&quot; &quot;(vector [1 2 3 4 ] 1 2 3)&quot; &quot;(list 1 2 3 4 )&quot; &quot;(hash-map :1 1 :2 2)&quot; &quot;(hash-map :1 1 :2 2 :1 4)&quot; &quot;(hash-map :1 1 :2 2 :3 1)&quot; &quot;(hash-set 1 2 3 4 5 1)&quot; &quot;(add100 123)&quot; &quot;(def dec9 (dec-maker 9\n                     ))&quot; &quot;(def dec9 (dec-maker 9))&quot; &quot;(def dec9 (dec-maker 9)) (dec9 10)&quot; &quot;(dec9 10)&quot; &quot;(map + [1 2 34])&quot; &quot;(map + 1 [1 2 34])&quot; &quot;(map inc [1 2 34])&quot; &quot;(mapset inc [1 1 2 2])&quot; &quot;(= #{1 2 3 4} (conj #{1 4 3} #{2}))&quot; &quot;(= #{1 2 3 4} (conj #{1 4 3} 2))&quot; &quot;(+ 1 23  4 5)&quot; &quot;(map str [\&quot;a\&quot; \&quot;b\&quot; \&quot;c\&quot;] [\&quot;A\&quot; \&quot;B\&quot;])&quot; &quot;(map str [\&quot;a\&quot; \&quot;b\&quot; \&quot;c\&quot;] [\&quot;A\&quot; \&quot;B\&quot; \&quot;C\&quot; \&quot;D\&quot;])&quot; &quot;(map unify-diet-data human-consumption critter-consumption)&quot; &quot;(testf 1)&quot; &quot;((testf) 1)&quot; &quot;((testf) 10)&quot; &quot;((testf) inc)&quot; &quot;((testf) dec)&quot; &quot;(map inc [1 2 3 4])&quot; &quot;(map str [\&quot;a\&quot; \&quot;b\&quot; \&quot;c\&quot;] [\&quot;A\&quot; \&quot;B\&quot; \&quot;C\&quot; \&quot;D\&quot;]\n     [\&quot;1\&quot; \&quot;2\&quot; \&quot;3\&quot;])&quot; &quot;(my- map str [\&quot;a\&quot; \&quot;b\&quot; \&quot;c\&quot;] [\&quot;A\&quot; \&quot;B\&quot; \&quot;C\&quot; \&quot;D\&quot;]\n     [\&quot;1\&quot; \&quot;2\&quot; \&quot;3\&quot;])&quot; &quot;(my-map str [\&quot;a\&quot; \&quot;b\&quot; \&quot;c\&quot;] [\&quot;A\&quot; \&quot;B\&quot; \&quot;C\&quot; \&quot;D\&quot;]\n     [\&quot;1\&quot; \&quot;2\&quot; \&quot;3\&quot;])&quot; &quot;(my-map inc [1 2 3 4 5])&quot;], :remote []}}</component>
</project>